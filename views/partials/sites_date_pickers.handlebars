<div class="row">
                <div class="col-sm-12">
                    <div class="well" style="background-color:#ffffff; box-shadow:2px 2px 2px grey;">
                        <h2 id="dashboard_view"><img src={{site.icon_url}} class="img-rounded" width="50%">{{site.name}} Site Analysis</h2>
                    </div>
                </div>
            </div>
        <div id="site_stats">
        <div class="row">
            <div class="col-sm-8">
                <div class="well" style="background-color:#ffffff;border:#ffffff" >
                    <h2>Month Average</h2>
                    <canvas id="quick_polar_chart"></canvas>
                </div>
            </div>
        </div>
      
        <div class="row">
            <div class="col-sm-8">
                <div class="panel" style="background-color: white; box-shadow:2px 2px 2px grey;">
                    <div class="panel-heading">
                         <input id="date_range_client_total" placeholder="Select a Date Range" value="">
                    </div>
                    <div class="panel-body">
                        <canvas id="client_total_chart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div clas="row">
            <div class="col-sm-8">
                 <div class="panel" style="background-color: white; box-shadow:2px 2px 2px grey;">
                    <div class="panel-heading">
                         <input id="date_range_avg_wait" placeholder="Select a Date Range" value="">
                    </div>
                    <div class="panel-body">
                        <canvas id="avg_wait_chart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        </div>
        </div>
<script>
    function getTodayQuickStats(){
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function(){
                    if(this.status == 200 && this.readyState == 4){
                        var stats = JSON.parse(this.responseText);
                        console.log(stats);
                        if (stats != "No Rates"){
                            quick_chart.data.datasets[0].data = [stats.total,stats.avg_rate,stats.min,stats.max];
                            quick_chart.update();
                        }
                    }
                };
                xmlhttp.open("GET","/api/rates/{{site._id}}/today",true);
                xmlhttp.send();
        }
        
    function getRange(start,end){
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function(){
                    if(this.status == 200 && this.readyState == 4){
                        var rates = JSON.parse(this.responseText);
                        console.log(rates);
                    }
                };
                xmlhttp.open("POST","/api/rates/{{site._id}}/range",true);
                xmlhttp.setRequestHeader("Content-Type","application/json");
                var range = JSON.stringify({start:start,end:end});
                xmlhttp.send(range);
        }
    function getTotalRatesForRange(start,end){
            
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function(){
                    if(this.status == 200 && this.readyState == 4){
                        var results = JSON.parse(this.responseText);
                        console.log(results);
                        if (results == "No Rates"){
                            console.log("no rates");
                            alert("Sorry, No Data for specified period");
                        }else{
                            console.log("Some Rates");
                            totalChart.data.datasets[0].data = results.clientsPerDay;
                            totalChart.data.labels = results.clientsPerDay;
                            totalChart.update();
                        }
                    }
                };
                
                xmlhttp.open("POST","/api/rates/{{site._id}}/range/total",true);
                xmlhttp.setRequestHeader("Content-Type","application/json");
                var range = JSON.stringify({start:start,end:end});
                xmlhttp.send(range);
        }
    
    function getAverageRatesForRange(start,end){
            var xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function(){
                    if(this.status == 200 && this.readyState == 4){
                        var results = JSON.parse(this.responseText);
                        console.log(results);
                        avgChart.data.datasets[0].data = results.avg_rates;
                        avgChart.data.labels = results.days;
                        avgChart.update();
                    }
                };
                xmlhttp.open("POST","/api/rates/{{site._id}}/range/averages",true);
                xmlhttp.setRequestHeader("Content-Type","application/json");
            var range = JSON.stringify({start:start,end:end});
                xmlhttp.send(range);
        }
$(document).ready(function(){
   $("#date_range_client_total").daterangepicker({
        locale:{
            format : 'YYYY MM DD'
        },
        autoUpdateInput: true,
        autoApply: true,
        dateLimit:{
            "months":1
        },
        drops: "up",
        timePicker: false
    });
    $("#date_range_client_total").on('apply.daterangepicker',function(event,picker){
        var start = moment(picker.startDate);
        console.log(picker.startDate);
        var end = moment(picker.endDate);
        console.log(picker.endDate);
          getTotalRatesForRange(start,end);
    });
    $("#date_range_avg_wait").daterangepicker({
        locale:{
            format : 'YYYY MM DD'
        },
        autoUpdateInput: true,
        autoApply: true,
        dateLimit:{
            "months":1
        },
        drops: "up",
        timePicker: false
    });
    $("#date_range_avg_wait").on('apply.daterangepicker',function(event,picker){

        var start = moment(picker.startDate);
        console.log(picker.startDate);
        var end = moment(picker.endDate);
        console.log(picker.endDate);
          getAverageRatesForRange(start,end);
    });
    
});
</script>
<script type="text/javascript" src="/js/site_functions.js"></script>

